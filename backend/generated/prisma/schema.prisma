generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Jabatan {
  kd_jabatan   String @id @default(cuid())
  nama_jabatan String @unique @db.VarChar(255)

  user    User[]
  history HistoryJabatan[]
}

model User {
  nip        String   @id @db.VarChar(18)
  nama       String   @db.VarChar(255)
  password   String   @db.VarChar(255)
  role       Role     @default(user)
  kd_jabatan String
  image      String?
  nip_atasan String?  @db.VarChar(18)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  atasan  User?   @relation("Atasan", fields: [nip_atasan], references: [nip], onDelete: SetNull, onUpdate: Cascade)
  jabatan Jabatan @relation(fields: [kd_jabatan], references: [kd_jabatan], onDelete: NoAction, onUpdate: Cascade)

  bawahan           User[]             @relation("Atasan")
  history           HistoryJabatan[]
  tugas             Tugas[]
  laporan           Laporan[]
  pengumpulan_tugas PengumpulanTugas[]

  @@index([nip_atasan])
  @@index([kd_jabatan])
}

model HistoryJabatan {
  id            String    @id @default(cuid())
  user_nip      String
  kd_jabatan    String
  tanggal_mulai DateTime
  tanggal_akhir DateTime?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  user    User    @relation(fields: [user_nip], references: [nip], onDelete: Cascade, onUpdate: Cascade)
  jabatan Jabatan @relation(fields: [kd_jabatan], references: [kd_jabatan], onDelete: NoAction, onUpdate: Cascade)

  @@index([user_nip])
  @@index([kd_jabatan])
}

model Tugas {
  kd_tugas   String      @id @default(cuid())
  judul      String      @db.VarChar(255)
  deskripsi  String      @db.Text
  user_nip   String      @db.VarChar(18)
  status     StatusTugas @default(pending)
  deadline   DateTime
  prioritas  Prioritas
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt

  user              User               @relation(fields: [user_nip], references: [nip], onDelete: Cascade, onUpdate: Cascade)
  pengumpulan_tugas PengumpulanTugas[]

  @@index([user_nip])
  @@index([status])
  @@index([deadline])
}

model Laporan {
  kd_laporan    String   @id @default(cuid())
  isi_laporan   String   @db.Text
  judul_laporan String   @db.VarChar(255)
  user_nip      String   @db.VarChar(18)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  user  User          @relation(fields: [user_nip], references: [nip], onDelete: Cascade, onUpdate: Cascade)
  files LaporanFile[]

  @@index([user_nip])
}

model LaporanFile {
  kd_file    String   @id @default(cuid())
  kd_laporan String
  file_path  String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  laporan Laporan @relation(fields: [kd_laporan], references: [kd_laporan], onDelete: Cascade)

  @@index([kd_laporan])
}

model PengumpulanTugas {
  kd_pengumpulan_tugas String                 @id @default(cuid())
  kd_tugas             String
  user_nip             String                 @db.VarChar(18)
  tanggal_pengumpulan  DateTime
  catatan              String                 @db.Text
  status               StatusPengumpulanTugas @default(menunggu)
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt

  tugas  Tugas                   @relation(fields: [kd_tugas], references: [kd_tugas])
  user   User                    @relation(fields: [user_nip], references: [nip])
  rating Rating[]
  files  PengumpulanTugasFile[]
  images PengumpulanTugasImage[]

  @@index([kd_tugas])
  @@index([user_nip])
}

model PengumpulanTugasFile {
  kd_file              String   @id @default(cuid())
  kd_pengumpulan_tugas String
  file_path            String
  created_at           DateTime @default(now())
  updated_at           DateTime @updatedAt

  pengumpulan_tugas PengumpulanTugas @relation(fields: [kd_pengumpulan_tugas], references: [kd_pengumpulan_tugas], onDelete: Cascade)

  @@index([kd_pengumpulan_tugas])
}

model PengumpulanTugasImage {
  kd_image             String   @id @default(cuid())
  kd_pengumpulan_tugas String
  image_path           String
  created_at           DateTime @default(now())
  updated_at           DateTime @updatedAt

  pengumpulan_tugas PengumpulanTugas @relation(fields: [kd_pengumpulan_tugas], references: [kd_pengumpulan_tugas], onDelete: Cascade)

  @@index([kd_pengumpulan_tugas])
}

model Rating {
  kd_rating            String   @id @default(cuid())
  kd_pengumpulan_tugas String
  nilai                Float
  komentar             String?
  created_at           DateTime @default(now())

  pengumpulanTugas PengumpulanTugas @relation(fields: [kd_pengumpulan_tugas], references: [kd_pengumpulan_tugas])

  @@index([kd_pengumpulan_tugas])
}

enum Role {
  user
  admin
}

enum Prioritas {
  tinggi
  sedang
  rendah
}

enum StatusTugas {
  pending
  in_progress
  selesai
  dibatalkan
}

enum StatusPengumpulanTugas {
  menunggu
  disetujui
  revisi
  ditolak
}
